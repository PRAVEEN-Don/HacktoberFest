import pygame
import time
import random

# Initialize Pygame
pygame.init()

# Set display dimensions
display_width = 800
display_height = 600

# Define colors
black = (0, 0, 0)
white = (255, 255, 255)
red = (255, 0, 0)

car_width = 73  # Width of the car

# Create game display
gameDisplay = pygame.display.set_mode((display_width, display_height))
pygame.display.set_caption('A Bit Racey')
clock = pygame.time.Clock()

# Load car image
carImg = pygame.image.load('racecar.png')

def draw_obstacle(thingx, thingy, thingw, thingh, color):
    """Draw an obstacle on the screen."""
    pygame.draw.rect(gameDisplay, color, [thingx, thingy, thingw, thingh])

def draw_car(x, y):
    """Draw the player's car on the screen."""
    gameDisplay.blit(carImg, (x, y))

def display_message(text):
    """Display a message on the screen."""
    largeText = pygame.font.Font('freesansbold.ttf', 115)
    textSurface = largeText.render(text, True, black)
    textRect = textSurface.get_rect()
    textRect.center = (display_width / 2, display_height / 2)
    gameDisplay.blit(textSurface, textRect)
    pygame.display.update()
    time.sleep(2)

def crash():
    """Handle the crash scenario."""
    display_message('You Crashed')

def game_loop():
    """Main game loop."""
    x = display_width * 0.45
    y = display_height * 0.8
    x_change = 0

    # Initial position and speed of the obstacle
    obstacle_startx = random.randrange(0, display_width)
    obstacle_starty = -600
    obstacle_speed = 7
    obstacle_width = 100
    obstacle_height = 100

    gameExit = False

    while not gameExit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x_change = -5
                if event.key == pygame.K_RIGHT:
                    x_change = 5

            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    x_change = 0

        x += x_change

        # Fill the display with white
        gameDisplay.fill(white)

        # Draw the obstacle
        draw_obstacle(obstacle_startx, obstacle_starty, obstacle_width, obstacle_height, black)
        obstacle_starty += obstacle_speed

        # Draw the player's car
        draw_car(x, y)

        # Check for boundary collisions
        if x > display_width - car_width or x < 0:
            crash()

        # Reset the obstacle if it goes off screen
        if obstacle_starty > display_height:
            obstacle_starty = 0 - obstacle_height
            obstacle_startx = random.randrange(0, display_width)

        # Check for collision with the obstacle
        if y < obstacle_starty + obstacle_height:
            if (x > obstacle_startx and x < obstacle_startx + obstacle_width) or \
               (x + car_width > obstacle_startx and x + car_width < obstacle_startx + obstacle_width):
                crash()

        pygame.display.update()
        clock.tick(60)

# Start the game loop
game_loop()
pygame.quit()
quit()
